// pract6.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

/*#include <iostream>		// для консольного ввода-вывода
#include <string>		// для переменных типа данных string
#include <Windows.h>

using namespace std;

// главная функция программы (точка входа)
int main(void)
{
	// русификация всех диалогов программы
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	// хранит текст, введенный с клавиатуры
	string text;

	// предлагаем пользователю ввести с клавиатуры текст
	cout << "Введите входной текст для обработки: ";
	getline(cin, text);

	// определяем константы, отвечающие за искомое и заменяющее слова
	const char M = 'м'; // буква, которую ищем
	const char DOT = '.';
	int count_m = 0; // счётчик букв м
	int k = 0; // счётчик предложений


	for (int i = 0; i < text.size(); i++) {
		if (text[i] == M)
			count_m++;
		else if (text[i] == DOT)
			k++;
	}
	
	cout << "Количество букв м в тексте: " << count_m << "\n Количество предложений в тексте" << k << endl;
	// выводим результат на экран
	cout << "Текст: " << text;

	// задержка работы программы, чтобы у пользователя была возможность просмотреть результат
	fflush(stdin);
	cout << endl << endl << "Для завершения работы программы нажмите ENTER...";
	cin.get();

	// завершение выполнение программы и передача управления в ОС (код 0 - все прошло успешно!)
	return 0;
}*/

/*Исходный текст набран с ошибками: иногда отсутствуют
пробелы после точек. Вставить 1 пробел после каждой точки,
если он отсутствует перед следующим предложением. а
также вычислить количество предложений. А также удалить
квадратные скобки.*/

/*#include <iostream>		// для консольного ввода-вывода
#include <string>		// для переменных типа данных string
#include <Windows.h>

using namespace std;

// главная функция программы (точка входа)
int main(void)
{
	// русификация всех диалогов программы
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	// хранит текст, введенный с клавиатуры
	string text;

	// предлагаем пользователю ввести с клавиатуры текст
	cout << "Введите входной текст для обработки: ";
	getline(cin, text);

	const char PROBEL = ' '; 
	const char DOT = '.';
	const char LEFT_BRICKS = '[';
	const char RIGHT_BRICKS = ']';

	string new_str;
	for (int i = 0; i < text.size(); i++) {
		if (i + 1 != text.size() & text[i] == DOT & text[i + 1] != PROBEL)
			new_str = new_str + DOT + PROBEL;
		else if (text[i] != LEFT_BRICKS & text[i] != RIGHT_BRICKS)
			new_str += text[i];
	}
	cout << "Исходный текст: " << text << endl;

	// выводим результат на экран
	cout << "Исправленный текст: " << new_str << endl;
	
	

	// задержка работы программы, чтобы у пользователя была возможность просмотреть результат
	fflush(stdin);
	cout << endl << endl << "Для завершения работы программы нажмите ENTER...";
	cin.get();

	// завершение выполнение программы и передача управления в ОС (код 0 - все прошло успешно!)
	return 0;
}*/

/*#include <iostream>		// для консольного ввода-вывода
#include <string>		// для переменных типа данных string
#include <algorithm>	// для сортировки символов в рамках строки sort

using namespace std;

// главная функция программы (точка входа)
int main(void)
{
	// русификация всех диалогов программы
	setlocale(LC_ALL, "");

	// хранит текст, введенный с клавиатуры
	string text;

	// предлагаем пользователю ввести с клавиатуры текст
	cout << "Введите входной текст для обработки: ";
	getline(cin, text);

	// определяем константы, отвечающие за первый и последний символы
	const char FIRST = '?';
	const char LAST = '!';

	int first_index; // индекс, где стоит символ ?
	int last_index; // индекс, где стоит символ !

	// пробуем найти в заданном тексте первый элемент равный ?
	first_index = text.find_first_of(FIRST);

	// пробуем найти в заданном тексте последний элемент равный !
	last_index = text.find_last_of(LAST);

	// надо убедиться, что эти символы были найдены, иначе сортировка невозможна!
	if ((first_index == -1) || (last_index == -1))
		cout << endl << "В заданном тексте не обнаружены символы ? или !. Обработка входного текста невозможна!" << endl;
	else
	{
		// возможна ситуация, что символ ! встречается раньше символа ?, в этом случае меняем их местами (например "hello!stop?machine")
		if (first_index > last_index)
			swap(first_index, last_index);

		// сортируем символы на интервале ( first_index, last_index )
		sort(text.begin() + first_index + 1, text.begin() + last_index);

		// выводим обработанный текст на экран
		cout << "После обработки текст имеет вид:     " << text << endl;
	}

	// задержка работы программы, чтобы у пользователя была возможность просмотреть результат
	fflush(stdin);
	cout << endl << endl << "Для завершения работы программы нажмите ENTER...";
	cin.get();

	// завершение выполнение программы и передача управления в ОС (код 0 - все прошло успешно!)
	return 0;
}*/

#include <iostream>		// для консольного ввода-вывода
#include <string>		// для переменных типа данных string
#include <algorithm>	// для сортировки символов в рамках строки sort

using namespace std;

// главная функция программы (точка входа)
int main(void)
{
	// русификация всех диалогов программы
	setlocale(LC_ALL, "");

	// значения строк, введенных с клавиатуры
	string S1, S2;

	// предлагаем пользователю ввести с клавиатуры строку S1
	cout << "Введите строку S1: ";
	getline(cin, S1);

	// предлагаем пользователю ввести с клавиатуры строку S2
	cout << "Введите строку S2: ";
	getline(cin, S2);

	// сортируем символы внутри каждой строки
	sort(S1.begin(), S1.end());
	sort(S2.begin(), S2.end());

	// сравниваем отсортированные символы в строках и выводим результат на экран
	if (S1 == S2)
		cout << endl << "Да, переставляя символы строки S1, можно получить строку S2." << endl;
	else
		cout << endl << "Нет, переставляя символы строки S1, нельзя получить строку S2." << endl;

	// задержка работы программы, чтобы у пользователя была возможность просмотреть результат
	fflush(stdin);
	cout << endl << endl << "Для завершения работы программы нажмите ENTER...";
	cin.get();

	// завершение выполнение программы и передача управления в ОС (код 0 - все прошло успешно!)
	return 0;
}


