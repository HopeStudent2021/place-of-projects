/*Создать динамические массивы, используя указатели. Дан
двумерный массив a, размером (n⋅m). Заполнить одномерный
массив, найдя сумму положительных элементов в каждом
столбце матрицы.*/
/*
#include <iostream>
#include <time.h>
#include <iomanip>

using namespace std;

void main()
{
	int** a; // динамический двумерный массив целых чисел
	int n, m; // габариты двумерного массива а (n - количество строк, m - количество колонок)

	// руссификация диалогов программы
	setlocale(LC_ALL, "Russian");

	cout <<"Задание 1"<< endl;

	// предлагаем пользователю ввести размеры двумерного массива
	cout << "\n Создать динамические массивы, используя указатели.\n Дан двумерный массив a, размером(n⋅m).\n Заполнить одномерный массив, найдя сумму положительных элементов в каждом столбце матрицы.\n" << endl;

	cout << "Введите через пробел 2 натуральных числа (n, m) - размеры двумерного массива: ";
	cin >> n >> m;

	// выделяем память под элементы массива
	a = new int* [n];
	for (int i = 0; i < n; i++)
		a[i] = new int[m];

	// предлагаем пользователю выбрать способ заполнения элементов массива
	int select;
	do
	{
		cout << "\nВЫБЕРИТЕ СПОСОБ ЗАПОЛНЕНИЯ ЭЛЕМЕНТОВ МАССИВА" << endl;
		cout << "1 - ввод с клавиатуры" << endl;
		cout << "2 - случайными числами из отрезка [-25; +25]" << endl;
		cout << "\tВЫБОР: ";
		cin >> select;
	} while ((select < 1) || (select > 2));

	// если пользователь хочет вводить значения элементов с клавиатуры
	if (select == 1)
	{
		cout << endl << "Вам предстоит ввести с клавиатуры " << n * m << " элем. целого типа" << endl;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < m; j++)
			{
				cout << "\t- введите значение элемента A[" << (i + 1) << "][" << (j + 1) << "]: ";
				cin >> a[i][j];
			}
		}
	}
	else // пользователь выбрал заполнение элементов массива случайными числами
	{
		srand(time(NULL));
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				a[i][j] = -25 + rand() % 51; // случайное число из отрезка [-25; +25]
	}

	// выводим значения элементов исходного двумерного массива а на экран в табличном формате
	cout << "\nЭлементы двумерного массива(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
			cout << setw(8) << a[i][j];
		cout << endl << endl;
	}

	// определяем одномерный динамический массив целых чисел,
	//отвечающий за количество положительных элементов в каждом столбце матрицы
	int* v = new int[m];

	// находим количество положительных элементов в каждом столбце матрицы
	int plus_sum; // хранит сумму положительных элементов в текущем столбце 
	for (int j = 0; j < m; j++) 
	{
		plus_sum = 0;
		for (int i = 0; i < n; i++)
			if (a[i][j] > 0) // если текущий элемент положительный, то
				plus_sum+= a[i][j]; // увеличиваем сумму на значение положительного элемента в колонке №j

	 // запоминаем сумму положительных элементов в колонке №j в соо-щем элементе выходного одномерного массива			
		v[j] = plus_sum;
	}

	// выводим на экран сумму положительных элементов в каждой столбце 
	cout << "Сумма положительных элементов в каждом столбце матрицы:" << endl;
	for (int i = 0; i < m; i++)
		cout << setw(8) << v[i];

	// удаляем динамическую память из-под элементов двумерного массива
	for (int i = 0; i < n; i++)
		delete[]a[i];
	delete[]a;

	// удаляем память из-под одномерного массива
	delete[]v;
	
	// задержка программы, чтобы у пользователя была возможность просмотреть 
	cout << endl << endl << endl << "Для завершения работы программы нажмите ENTER...";
	fflush(stdin);
	cin.get();
}
*/

/*Создать динамические массивы, используя указатели. 
Дан двумерный массив a, размером (n⋅n) (или квадратная матрица a). 
Найти номер минимального элемента ее побочной диагонали.*/


/*#include <iostream>
#include <time.h>
#include <iomanip>

using namespace std;

int main()
{
	int** a; // динамическая матрица целых чисел
	int n; // порядок матрицы

	// руссификация диалогов программы
	setlocale(LC_ALL, "Russian");

	cout << "Введите порядок матрицы n (натуральное число): ";
	cin >> n;

	// выделяем память под элементы матрицы
	a = new int* [n];
	for (int i = 0; i < n; i++)
		a[i] = new int[n];

	// предлагаем пользователю выбрать способ заполнения элементов массива
	int select;
	do
	{
		cout << "\nВЫБЕРИТЕ СПОСОБ ЗАПОЛНЕНИЯ ЭЛЕМЕНТОВ МАССИВА" << endl;
		cout << "1 - ввод с клавиатуры" << endl;
		cout << "2 - случайными числами из отрезка [-25; +25]" << endl;
		cout << "\tВЫБОР: ";
		cin >> select;
	} while ((select < 1) || (select > 2));

	// если пользователь хочет вводить значения элементов с клавиатуры
	if (select == 1)
	{
		cout << endl << "Вам предстоит ввести с клавиатуры " << n * n << " элем. целого типа" << endl;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				cout << "\t- введите значение элемента A[" << (i + 1) << "][" << (j + 1) << "]: ";
				cin >> a[i][j];
			}
		}
	}
	else // пользователь выбрал заполнение элементов массива случайными числами
	{
		srand(time(NULL));
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				a[i][j] = -25 + rand() % 51; // случайное число из отрезка [-25; +25]
	}
	
	// выводим значения элементов исходного двумерного массива а на экран в табличном формате
	cout << "\nЭлементы матрицы(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			
			cout << setw(7) << a[i][j];
		cout << endl << endl;
	}


	int mn; // хранение значения минимума
	int inMinPobDiag = 0; //хранение индекса минимального значения

	//проход по побочной диагонали
	for (int i = 0; i < n; i++)
	{
		mn = a[0][n-1]; //присваивание значения первого элемента побочной диагонали минимуму
		if (a[i][n - i - 1] < mn) // если элемент побочной диагонали меньше минимума,
		{ 
			mn = a[i][n - i - 1];// то присваиваем минимуму значение этого элемента
			inMinPobDiag = i; // и запонимаем его индекс
		}
	}

	
	cout << "\nНомер минимального элемента ее побочной диагонали(если считать с 0) = " << inMinPobDiag <<endl;
	cout << "\nНомер минимального элемента ее побочной диагонали(если считать с 1) = " << inMinPobDiag + 1 << endl;

	// удаляем динамическую память из-под элементов двумерного массива
	for (int i = 0; i < n; i++)
		delete[]a[i];
	delete[]a;

	// задержка программы, чтобы у пользователя была возможность просмотреть результат
	cout << endl << endl << endl << "Для завершения работы программы нажмите ENTER...";
	cin.get();
}
*/

/*Создать динамические массивы, используя указатели. Дан
двумерный массив a, размером (n⋅n). Упорядочить по
возрастанию первую строку матрицы.*/


/*#include <iostream>
#include <time.h>
#include <iomanip>
#include <algorithm>

using namespace std;

// главная функция программы (точка входа)
void main(void)
{
	int** a; // динамическая матрица целых чисел
	int n; // порядок матрицы

	// руссификация диалогов программы
	setlocale(LC_ALL, "Russian");

	cout << "Введите порядок матрицы n (натуральное число): ";
	cin >> n;

	// выделяем память под элементы матрицы
	a = new int* [n];
	for (int i = 0; i < n; i++)
		a[i] = new int[n];

	// предлагаем пользователю выбрать способ заполнения элементов массива
	int select;
	do
	{
		cout << "\nВЫБЕРИТЕ СПОСОБ ЗАПОЛНЕНИЯ ЭЛЕМЕНТОВ МАССИВА" << endl;
		cout << "1 - ввод с клавиатуры" << endl;
		cout << "2 - случайными числами из отрезка [-25; +25]" << endl;
		cout << "\tВЫБОР: ";
		cin >> select;
	} while ((select < 1) || (select > 2));

	// если пользователь хочет вводить значения элементов с клавиатуры
	if (select == 1)
	{
		cout << endl << "Вам предстоит ввести с клавиатуры " << n * n << " элем. целого типа" << endl;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				cout << "\t- введите значение элемента A[" << (i + 1) << "][" << (j + 1) << "]: ";
				cin >> a[i][j];
			}
		}
	}
	else // пользователь выбрал заполнение элементов массива случайными числами
	{
		srand(time(NULL));
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				a[i][j] = -25 + rand() % 51; // случайное число из отрезка [-25; +25]
	}

	// выводим значения элементов исходного двумерного массива а на экран в табличном формате
	cout << "\nЭлементы матрицы(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setw(7) << a[i][j];
		cout << endl;
	}

	// упорядочиваем первую строку матрицы по возрастанию
	sort(a[0], a[0] + n);
	

	// выводим преобразованную матрицу на экран
	cout << "\nЭлементы преобразованной матрицы(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setw(7) << a[i][j];
		cout << endl;
	}

	// удаляем динамическую память из-под элементов двумерного массива
	for (int i = 0; i < n; i++)
		delete[]a[i];
	delete[]a;

	// задержка программы, чтобы у пользователя была возможность просмотреть результат
	cout << endl << "Для завершения работы программы нажмите ENTER...";
	fflush(stdin);
	cin.get();
}

*/

/*Создать динамические массивы, используя указатели. Дан двумерный массив a, размером (n⋅n).
Упорядочить по возрастанию главную диагональ.*/

#include <iostream>
#include <time.h>
#include <iomanip>
#include <algorithm>

using namespace std;

// главная функция программы (точка входа)
void main(void)
{
	int** a; // динамическая матрица целых чисел
	int n; // порядок матрицы

	// руссификация диалогов программы
	setlocale(LC_ALL, "Russian");

	cout << "Введите порядок матрицы n (натуральное число): ";
	cin >> n;

	// выделяем память под элементы матрицы
	a = new int* [n];
	for (int i = 0; i < n; i++)
		a[i] = new int[n];

	// предлагаем пользователю выбрать способ заполнения элементов массива
	int select;
	do
	{
		cout << "\nВЫБЕРИТЕ СПОСОБ ЗАПОЛНЕНИЯ ЭЛЕМЕНТОВ МАССИВА" << endl;
		cout << "1 - ввод с клавиатуры" << endl;
		cout << "2 - случайными числами из отрезка [-25; +25]" << endl;
		cout << "\tВЫБОР: ";
		cin >> select;
	} while ((select < 1) || (select > 2));

	// если пользователь хочет вводить значения элементов с клавиатуры
	if (select == 1)
	{
		cout << endl << "Вам предстоит ввести с клавиатуры " << n * n << " элем. целого типа" << endl;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				cout << "\t- введите значение элемента A[" << (i + 1) << "][" << (j + 1) << "]: ";
				cin >> a[i][j];
			}
		}
	}
	else // пользователь выбрал заполнение элементов массива случайными числами
	{
		srand(time(NULL));
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				a[i][j] = -25 + rand() % 51; // случайное число из отрезка [-25; +25]
	}

	// выводим значения элементов исходного двумерного массива а на экран в табличном формате
	cout << "\nЭлементы исходной матрицы(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setw(7) << a[i][j];
		cout << endl;
	}

	// упорядочиваем элементы главной диагонали по возрастанию
	int tmp;
	for (int i = 1; i < n; i++) {
		for (int i = 1; i < n; i++) {
			if (a[i - 1][i - 1] > a[i][i]) {
				tmp = a[i][i];
				a[i][i] = a[i - 1][i - 1];
				a[i - 1][i - 1] = tmp;
			}
		}
	}



	// выводим преобразованную матрицу на экран
	cout << "\nЭлементы преобразованной матрицы(a) имеют вид:" << endl;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			cout << setw(7) << a[i][j];
		cout << endl;
	}

	// удаляем динамическую память из-под элементов двумерного массива
	for (int i = 0; i < n; i++)
		delete[]a[i];
	delete[]a;

	// задержка программы, чтобы у пользователя была возможность просмотреть результат
	cout << endl << "Для завершения работы программы нажмите ENTER...";
	fflush(stdin);
	cin.get();
}







